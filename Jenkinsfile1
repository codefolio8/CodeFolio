pipeline {
    agent any // Run on any available Jenkins agent

    options {
        timeout(time:5, unit: 'MINUTES') // Stop if build runs longer than 10 minutes
        buildDiscarder(logRotator(numToKeepStr: '10')) // Keep last 10 builds only
    }

    triggers {
        pollSCM('H 2 * * *') // Poll GitHub once a day around 2 AM
    }

    environment {
        REPO_URL = 'https://github.com/codefolio8/CodeFolio.git' // GitHub repo
        GIT_CREDENTIALS = 'Jenkins-CI' // Jenkins credential ID (username + password)
    }

    stages {

        stage('Clone Repository') {
            steps {
                echo "Cloning develop branch from ${REPO_URL}" // Info log
                git branch: 'develop', url: "${REPO_URL}", credentialsId: "${GIT_CREDENTIALS}" // Checkout develop
            }
        }

        stage('Merge develop to main') {
            steps {
                echo "Merging develop branch into main" // Info log
                bat """
                    git config user.email "jenkins@ci.local" // Set git email
                    git config user.name "Jenkins CI" // Set git username
                    git fetch origin // Fetch latest branches
                    git checkout main // Switch to main branch
                    git merge origin/develop --no-edit // Merge develop into main
                    git push origin main // Push merged changes
                """
                echo "Merge completed successfully!" // Success log
            }
        }

        stage('Simulated Deployment') {
            steps {
                echo "ðŸš€ Simulating deployment..." // Info log
                
            }
        }
    }

    post {
        success {
            echo 'CD simulation succeeded â€” develop merged into main!' // Success summary
        }
        failure {
            echo 'CD simulation failed. Check logs.' // Failure summary
        }
    }
}
